from fastapi import APIRouter, Depends
from pymongo.database import Database
from app.db.mongo_client import get_mongo_db
from app.model.status_request import StatusSummaryRequest
from app.utils.logger import setup_logger
from app.services.status_service import StatusService

router = APIRouter()
logger = setup_logger(__name__)

@router.post("/status-summary")
async def status_summary(request: StatusSummaryRequest, db: Database = Depends(get_mongo_db)):
    """
    POST endpoint to fetch status summary for a given tenant and engagement.

    This endpoint queries `run_management` to find all year-quarter metadata for the given
    tenant and engagement. For each year-quarter combination, it retrieves the latest log entry
    from `run_request_logs` (SharePoint ingestion logs) and returns the step status summary.

    Returns a structured JSON response with year, quarter, and steps for each combination.
    """
    try:
        logger.info(f"[API] Status summary requested for tenant_id={request.tenant_id}, engagement_id={request.engagement_id}")

        service = StatusService(db)
        summary = service.get_status_summary(request.tenant_id, request.engagement_id)

        return {
            "status": "success",
            "data": summary
        }

    except Exception as e:
        logger.exception(f"[API ERROR] Failed to retrieve status summary: {str(e)}")
        return {
            "status": "error",
            "message": "Failed to fetch status summary.",
            "details": str(e)
        }
